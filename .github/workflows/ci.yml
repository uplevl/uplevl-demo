name: CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - converted_to_draft

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.head.ref || github.ref_name }}-ci"
  cancel-in-progress: true

jobs:
  build: 
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.14.2
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: 'pnpm'
      - uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Copy env example
        uses: ./.github/actions/copy-env-example
      - name: Build
        run: pnpm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          NEXT_PUBLIC_POSTHOG_HOST: ${{ secrets.NEXT_PUBLIC_POSTHOG_HOST }}
          NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.NEXT_PUBLIC_POSTHOG_KEY }}
          UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
          UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .next/
            node_modules/
            tsconfig.tsbuildinfo
            .env
          retention-days: 1
      

  typecheck:
    name: Type Checking
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.14.2
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: 'pnpm'
      - name: Type check
        run: pnpm run typecheck

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9.14.2
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 22.18.0
          cache: 'pnpm'
      - name: Lint
        run: pnpm run lint
